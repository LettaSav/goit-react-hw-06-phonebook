{"version":3,"sources":["redux/contacts-actions.js","redux/contacts-reducers.js","redux/store.js","redux/contacts-selectors.js","Components/ContactForm/useStyles.js","Components/ContactForm/ContactForm.jsx","Components/Filter/useStyle.js","Components/Filter/Filter.jsx","Components/ContactList/useStyle.js","Components/ContactList/ContactList.jsx","App.js","index.js"],"names":["addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","items","createReducer","actions","state","filter","type","_","action","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactsReducer","devTools","process","persistor","persistStore","getFilter","getContacts","ShowContacts","normalizedFilter","toLowerCase","includes","useStyles","createUseStyles","add_form","display","flexDirection","alignItems","justifyContent","padding","width","margin","input_label","marginBottom","contacts_input","height","background","borderRadius","border","textShadow","outline","fontSize","fontFamily","color","transition","submit_button","cursor","backgroundColor","transform","boxShadow","ContactForm","dispatch","useDispatch","useSelector","classes","useState","setName","setNumber","handleInputChange","e","target","value","onSubmit","preventDefault","find","contact","checkNameInContacts","checkNumberInContacts","checkEmptyBars","test","checkSpelling","alert","className","placeholder","onChange","contacts_label","marginRight","Filter","contact_list","listStyle","marginTop","contact_item","btn","marginLeft","ContactList","showContacts","map","onClick","main_container","backgroundImage","header_title","App","length","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.cf538f8a.chunk.js","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContact = createAction('contact/add', (name, number) => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    name: name,\r\n    number: number,\r\n  },\r\n}));\r\nexport const deleteContact = createAction('contact/delete');\r\nexport const changeFilter = createAction('contact/changeFilter');\r\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport * as actions from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) => [...state, payload],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter.type]: (_, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contacts-reducers';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","export const getFilter = state => state.contacts.filter;\r\n\r\nexport const getContacts = state => state.contacts.items;\r\n\r\nexport const ShowContacts = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return contacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n","import { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n  add_form: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'baseline',\r\n    justifyContent: 'baseline',\r\n    padding: 16,\r\n    width: 16 * 20,\r\n    margin: 'auto',\r\n  },\r\n\r\n  input_label: {\r\n    marginBottom: 5,\r\n    margin: 'auto',\r\n  },\r\n\r\n  contacts_input: {\r\n    width: 240,\r\n    height: 50,\r\n    marginBottom: 15,\r\n    margin: 'auto',\r\n    background: '#fff',\r\n\r\n    borderRadius: 20,\r\n    border: 0,\r\n    padding: 10,\r\n\r\n    textShadow: '1px 1px 0 white',\r\n    outline: 'none',\r\n    fontSize: 16,\r\n    fontFamily: 'Abel sans-serif',\r\n    color: '#5E6472',\r\n    transition: '0.2s linear',\r\n  },\r\n  submit_button: {\r\n    width: 120,\r\n    color: '#61677C',\r\n\r\n    transition: 'all 0.2s ease-in-out',\r\n    cursor: 'pointer',\r\n    margin: 'auto',\r\n\r\n    border: 0,\r\n    outline: 0,\r\n    borderRadius: 16 * 20,\r\n    padding: 10,\r\n    backgroundColor: '#fff',\r\n    '&:hover': {\r\n      backgroundColor: '#B8F2E6',\r\n      color: '#5E6472',\r\n      transform: 'translatey(3px)',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n});\r\n\r\nexport default useStyles;\r\n","import { useState } from 'react';\r\nimport useStyles from './useStyles.js';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addContact } from '../../redux/contacts-actions';\r\nimport { getContacts } from '../../redux/contacts-selectors';\r\n\r\nconst ContactForm = () => {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getContacts);\r\n  const classes = useStyles();\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleInputChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n  const checkNameInContacts = name => {\r\n    return contacts.find(\r\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n    );\r\n  };\r\n  const checkNumberInContacts = number => {\r\n    return contacts.find(contact => contact.number === number);\r\n  };\r\n  const checkEmptyBars = (name, number) => {\r\n    return name === '' || number === '';\r\n  };\r\n  const checkSpelling = number => {\r\n    return !/\\d{3}\\d{2}\\d{3}\\d{2}/g.test(number);\r\n  };\r\n\r\n  const ResetFields = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (checkNameInContacts(name)) {\r\n      alert(`${name} is already in contacts!`);\r\n    } else if (checkNumberInContacts(number)) {\r\n      alert(` ${number} is already in contacts!`);\r\n    } else if (checkEmptyBars(name, number)) {\r\n      alert(`Enter Name and Number in order to add contact`);\r\n    } else if (checkSpelling(number)) {\r\n      alert('Enter valid telephone number');\r\n    } else {\r\n      dispatch(addContact(name, number));\r\n    }\r\n    ResetFields();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={classes.add_form}>\r\n      <label className={classes.input_label}>Name</label>\r\n      <input\r\n        className={classes.contacts_input}\r\n        name=\"name\"\r\n        type=\"text\"\r\n        placeholder=\"John Smith\"\r\n        value={name}\r\n        onChange={handleInputChange}\r\n      ></input>\r\n      <label className={classes.input_label}>Number</label>\r\n      <input\r\n        className={classes.contacts_input}\r\n        name=\"number\"\r\n        type=\"tel\"\r\n        placeholder=\"111-11-111-11\"\r\n        value={number}\r\n        onChange={handleInputChange}\r\n      ></input>\r\n      <button className={classes.submit_button}>Add Contact</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n  contacts_input: {\r\n    width: 200,\r\n    height: 30,\r\n    margin: 'auto',\r\n    background: '#fff',\r\n\r\n    borderRadius: 20,\r\n    border: 0,\r\n    padding: 10,\r\n\r\n    textShadow: '1px 1px 0 white',\r\n    outline: 'none',\r\n    fontSize: 16,\r\n    fontFamily: 'Abel sans-serif',\r\n    color: '#5E6472',\r\n    transition: '0.2s linear',\r\n  },\r\n  contacts_label: {\r\n    marginRight: 10,\r\n  },\r\n});\r\n\r\nexport default useStyles;\r\n","import useStyles from './useStyle';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getFilter } from '../../redux/contacts-selectors';\r\nimport { changeFilter } from '../../redux/contacts-actions';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = () => {\r\n  const filter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <label className={classes.contacts_label}>Find contacts by name </label>\r\n      <input\r\n        className={classes.contacts_input}\r\n        name=\"filter\"\r\n        type=\"text\"\r\n        value={filter}\r\n        onChange={e => dispatch(changeFilter(e.target.value))}\r\n      ></input>\r\n    </>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n  contact_list: {\r\n    listStyle: 'none',\r\n    marginTop: 40,\r\n  },\r\n  contact_item: {\r\n    width: 300,\r\n    marginBottom: 5,\r\n    margin: 0,\r\n\r\n    display: 'flex',\r\n    justifyContent: 'space-beetwen',\r\n    alignItems: 'center',\r\n  },\r\n  btn: {\r\n    color: '#61677C',\r\n\r\n    transition: 'all 0.2s ease-in-out',\r\n    cursor: 'pointer',\r\n\r\n    border: 0,\r\n    outline: 0,\r\n    borderRadius: 16 * 20,\r\n    padding: 10,\r\n    backgroundColor: '#fff',\r\n    marginRight: 0,\r\n    marginLeft: 'auto',\r\n    '&:hover': {\r\n      backgroundColor: '#B8F2E6',\r\n      color: '#5E6472',\r\n      transform: 'translatey(3px)',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n});\r\n\r\nexport default useStyles;\r\n","import useStyles from './useStyle';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { deleteContact } from '../../redux/contacts-actions';\r\nimport { ShowContacts } from '../../redux/contacts-selectors';\r\n\r\nconst ContactList = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const showContacts = useSelector(ShowContacts);\r\n\r\n  return (\r\n    <ul className={classes.contact_list}>\r\n      {showContacts.map(({ id, name, number }) => (\r\n        <li key={id} className={classes.contact_item}>\r\n          <p>\r\n            {name}: {number}\r\n          </p>\r\n          <button\r\n            className={classes.btn}\r\n            onClick={() => dispatch(deleteContact(id))}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default ContactList;\r\n","import { useSelector } from 'react-redux';\r\nimport { getContacts } from './redux/contacts-selectors';\r\n\r\nimport React from 'react';\r\n\r\nimport ContactForm from './Components/ContactForm/ContactForm';\r\nimport Filter from './Components/Filter/Filter';\r\nimport ContactList from './Components/ContactList/ContactList';\r\n\r\nimport { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n  main_container: {\r\n    width: 450,\r\n    height: 'auto',\r\n    borderRadius: 5,\r\n    margin: '2% auto',\r\n    boxShadow: '0 9 50 hsla(20, 67%, 75%, 0.31)',\r\n    padding: '2%',\r\n    backgroundImage: 'linear-gradient(-225deg, #E3FDF5 50%, #FFE6FA 50%)',\r\n  },\r\n  header_title: {\r\n    fontSize: '250%',\r\n    fontFamily: 'Playfair Display serif',\r\n    color: '#3e403f',\r\n  },\r\n});\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const contacts = useSelector(getContacts);\r\n\r\n  return (\r\n    <div className={classes.main_container}>\r\n      <h1 className={classes.header_title}>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2>Contacts</h2>\r\n      {contacts.length >= 1 && <Filter />}\r\n      {contacts.length > 0 ? (\r\n        <ContactList />\r\n      ) : (\r\n        <p>We coudnt find any contacts in your phonebook, add some contacts</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { store, persistor } from './redux/store';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}